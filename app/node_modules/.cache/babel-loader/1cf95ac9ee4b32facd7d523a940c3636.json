{"ast":null,"code":"import _toConsumableArray from\"/root/Documents/Workspaces/tests/suyo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/root/Documents/Workspaces/tests/suyo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/root/Documents/Workspaces/tests/suyo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useEffect,useState}from'react';import Map from'../Maps/Map';import Plots from'./Plots';import'../../styles/Home.css';import{getPlotCoords}from'../../services/getPlotCoords';import{createPlot,getAllPlots}from'../../services/plots';import AuthContext from'../../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),plots=_useState2[0],setPlots=_useState2[1];var _useContext=useContext(AuthContext),user=_useContext.user;var token=user.token;useEffect(function(){getAllPlots({token:token}).then(setPlots);},[token]);var addPlot=function addPlot(plot){var address=plot.address;getPlotCoords({query:address}).then(function(data){var coords=data.position;createPlot({token:token,plot:_objectSpread(_objectSpread({},plot),{},{coords:coords})}).then(function(newPlot){setPlots([].concat(_toConsumableArray(plots),[newPlot]));});});};return/*#__PURE__*/_jsx(\"div\",{className:\"home\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"plots\",children:[/*#__PURE__*/_jsx(Plots,{addPlot:addPlot}),/*#__PURE__*/_jsx(\"div\",{className:\"plots__map\",children:/*#__PURE__*/_jsx(Map,{plots:plots})})]})});};export default Home;","map":{"version":3,"sources":["/root/Documents/Workspaces/tests/suyo/app/src/components/Home/Home.jsx"],"names":["useContext","useEffect","useState","Map","Plots","getPlotCoords","createPlot","getAllPlots","AuthContext","Home","plots","setPlots","user","token","then","addPlot","plot","address","query","data","coords","position","newPlot"],"mappings":"2dAAA,OAASA,UAAT,CAAqBC,SAArB,CAAgCC,QAAhC,KAAgD,OAAhD,CAEA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,MAAO,uBAAP,CAEA,OAASC,aAAT,KAA8B,8BAA9B,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,sBAAxC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,cAA0BP,QAAQ,CAAC,EAAD,CAAlC,wCAAOQ,KAAP,eAAcC,QAAd,eACA,gBAAiBX,UAAU,CAACQ,WAAD,CAA3B,CAAQI,IAAR,aAAQA,IAAR,CACA,GAAQC,CAAAA,KAAR,CAAkBD,IAAlB,CAAQC,KAAR,CAEAZ,SAAS,CAAC,UAAM,CACdM,WAAW,CAAC,CAAEM,KAAK,CAALA,KAAF,CAAD,CAAX,CACGC,IADH,CACQH,QADR,EAED,CAHQ,CAGN,CAACE,KAAD,CAHM,CAAT,CAKA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxB,GAAQC,CAAAA,OAAR,CAAoBD,IAApB,CAAQC,OAAR,CACAZ,aAAa,CAAC,CAAEa,KAAK,CAAED,OAAT,CAAD,CAAb,CACGH,IADH,CACQ,SAACK,IAAD,CAAU,CACd,GAAkBC,CAAAA,MAAlB,CAA6BD,IAA7B,CAAQE,QAAR,CACAf,UAAU,CAAC,CAAEO,KAAK,CAALA,KAAF,CAASG,IAAI,gCAAOA,IAAP,MAAaI,MAAM,CAANA,MAAb,EAAb,CAAD,CAAV,CACGN,IADH,CACQ,SAACQ,OAAD,CAAa,CACjBX,QAAQ,8BAAKD,KAAL,GAAYY,OAAZ,GAAR,CACD,CAHH,EAID,CAPH,EAQD,CAVD,CAYA,mBACE,YAAK,SAAS,CAAC,MAAf,uBACE,aAAK,SAAS,CAAC,OAAf,wBACE,KAAC,KAAD,EAAO,OAAO,CAAEP,OAAhB,EADF,cAEE,YAAK,SAAS,CAAC,YAAf,uBACE,KAAC,GAAD,EAAK,KAAK,CAAEL,KAAZ,EADF,EAFF,GADF,EADF,CAUD,CAhCD,CAkCA,cAAeD,CAAAA,IAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\n\nimport Map from '../Maps/Map';\nimport Plots from './Plots';\n\nimport '../../styles/Home.css';\n\nimport { getPlotCoords } from '../../services/getPlotCoords';\nimport { createPlot, getAllPlots } from '../../services/plots';\n\nimport AuthContext from '../../context/AuthContext';\n\nconst Home = () => {\n  const [plots, setPlots] = useState([]);\n  const { user } = useContext(AuthContext);\n  const { token } = user;\n\n  useEffect(() => {\n    getAllPlots({ token })\n      .then(setPlots);\n  }, [token]);\n\n  const addPlot = (plot) => {\n    const { address } = plot;\n    getPlotCoords({ query: address })\n      .then((data) => {\n        const { position: coords } = data;\n        createPlot({ token, plot: { ...plot, coords } })\n          .then((newPlot) => {\n            setPlots([...plots, newPlot]);\n          });\n      });\n  };\n\n  return (\n    <div className=\"home\">\n      <div className=\"plots\">\n        <Plots addPlot={addPlot} />\n        <div className=\"plots__map\">\n          <Map plots={plots} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}